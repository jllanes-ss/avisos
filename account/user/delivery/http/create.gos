package handler

import (
	"net/http"

	"github.com/gofiber/fiber/v2"
	"github.com/jllanes-ss/avisos/account/domain"
)

// Store will store the article by given request body
func (a *UserHandler) Create(c *fiber.Ctx) (err error) {
	var user domain.User
	err = c.BodyParser(&user)
	if err != nil {
		return c.Status(http.StatusUnprocessableEntity).JSON(fiber.Map{"status": "error", "message": err.Error(), "data": nil})
		//return c.JSON(http.StatusUnprocessableEntity, err.Error())
	}

	var ok bool
	if ok, err = isRequestValid(&user); !ok {
		return c.Status(http.StatusBadRequest).JSON(fiber.Map{"status": "error", "message": err.Error(), "data": nil})
		//return c.JSON(http.StatusBadRequest, err.Error())
	}

	//ctx := c.Request().Context()
	err = a.UserService.Create(c.Context(), &user)
	if err != nil {
		return c.Status(http.StatusInternalServerError).JSON(fiber.Map{"status": "error", "message": err.Error(), "data": nil})
		//return c.JSON(getStatusCode(err), ResponseError{Message: err.Error()})
	}

	return c.Status(http.StatusCreated).JSON(fiber.Map{"status": "OK", "message": "User created", "data": user})

	//return c.JSON(http.StatusCreated, article)
}
